{"version":3,"file":"static/js/331.3531755a.chunk.js","mappings":"sMAGe,SAASA,EAASC,GAC/B,OAAuBC,EAAAA,EAAAA,UAAS,IAAG,eAA5BC,EAAI,KAACC,EAAO,KACbC,EAASC,EAAAA,MAAW,kBAAI,4BAA4B,IAwB1D,OAHAC,EAAAA,EAAAA,YAAU,WAnBRC,MACE,gCAAgCP,EAAMQ,KAAK,IAAIR,EAAMS,GAArD,qDACDC,MAAK,SAACC,GAAG,OAAGA,EAAIC,MAAM,IACtBF,MAAK,SAAAG,GACJV,EAAQ,IACR,IADW,eACHW,GAAC,cACDC,EAAO,CACXC,IAAQ,OAAJH,QAAI,IAAJA,GAAa,QAAT,EAAJA,EAAMX,KAAKY,UAAE,WAAT,EAAJ,EAAeG,KACnBC,IAAI,CAAK,OAAJL,QAAI,IAAJA,GAAa,QAAT,EAAJA,EAAMX,KAAKY,UAAE,WAAT,EAAJ,EAAeK,UAAc,OAAJN,QAAI,IAAJA,GAAa,QAAT,EAAJA,EAAMX,KAAKY,UAAE,WAAT,EAAJ,EAAeG,MAC7CG,IAAQ,OAAJP,QAAI,IAAJA,GAAa,QAAT,EAAJA,EAAMX,KAAKY,UAAE,OAAb,EAAeO,aAAa,mCAAsC,OAAJR,QAAI,IAAJA,GAAa,QAAT,EAAJA,EAAMX,KAAKY,UAAE,WAAT,EAAJ,EAAeO,cAAa,kCAEhGlB,GAAQ,SAAAD,GAAI,wBAAMA,GAAI,CAACa,GAAO,KANxBD,EAAI,EAAGA,IAAS,OAAJD,QAAI,IAAJA,GAAU,QAAN,EAAJA,EAAMX,YAAI,WAAN,EAAJ,EAAYoB,QAAO,GAAO,OAAJT,QAAI,IAAJA,GAAU,QAAN,EAAJA,EAAMX,YAAI,WAAN,EAAJ,EAAYoB,OAAO,IAAKR,IAAI,CAAC,IAAD,MAA9DA,EAOR,CACJ,IACGS,OAAM,SAAAC,GACLC,OAAOC,KAAK,OACd,GAKF,GAAE,KAEA,+BACK,OAAJxB,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,QAAO,IACV,iBAAKK,UAAU,mDAAkD,WAC7D,gBAAKA,UAAU,iCAAgC,UAC/C,iBAAKA,UAAU,0CAAyC,WACpD,gBAAKA,UAAU,uBACf,gBAAKA,UAAU,0FAAyF,wBAK5G,SAAC,EAAAC,SAAQ,CAACC,UACF,gBAAKF,UAAU,iDAAgD,UAC7D,SAAC,KAAG,CACFG,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,cACVC,aAAc,CAAC,EACfC,aAAa,kBAGlB,UACH,SAAC/B,EAAM,CAACgC,IAAKlC,UAM7B,C","sources":["components/cast/index.js"],"sourcesContent":["import React,{useEffect,Suspense,useState} from 'react';\r\nimport { Dna } from 'react-loader-spinner';\r\n\r\nexport default function CastCard(props) {\r\n  const [cast,setCast] = useState([]);\r\n  const Slider = React.lazy(()=>import(\"../slider/index.js\"));\r\n  const getCast = ()=>{\r\n    fetch(\r\n      'https://api.themoviedb.org/3/'+props.type+'/'+props.id+'/credits?api_key='+process.env.REACT_APP_MOVIE_API_KEY)\r\n    .then((res)=>res.json())\r\n    .then(data=>{\r\n      setCast([])\r\n      for(let i = 0; i < (data?.cast?.length<20?data?.cast?.length:20); i++){\r\n        const entr = {\r\n          alt:data?.cast[i]?.name,\r\n          tag:[data?.cast[i]?.character,data?.cast[i]?.name],\r\n          src:data?.cast[i]?.profile_path?\"https://image.tmdb.org/t/p/w300\"+data?.cast[i]?.profile_path:\"/assets/images/nonfoundhor.png\"\r\n        }\r\n        setCast(cast=>[...cast,entr]);\r\n      }\r\n  })\r\n    .catch(err=>{\r\n      window.open(\"/404\");\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getCast();\r\n  },[])\r\n  return (\r\n    <>\r\n    {cast?.length>0 &&\r\n        <div className=\"flex font-xl fontDesi p-2 flex-col w-full h-full\">\r\n            <div className=\"w-full flex justify-start mb-2\">\r\n            <div className=\"flex w-full flex-row items-center gap-0\">\r\n                <div className=\"w-28 h-1 bg-black\"></div>\r\n                <div className=\"border-2 border-black rounded-b-none bg-yellow-400 text-black w-fit p-2 py-1 rounded-xl\">\r\n                Cast\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <Suspense fallback={\r\n                    <div className=\"h-full w-full justify-center items-center flex\">\r\n                      <Dna\r\n                        visible={true}\r\n                        height=\"80\"\r\n                        width=\"80\"\r\n                        ariaLabel=\"dna-loading\"\r\n                        wrapperStyle={{}}\r\n                        wrapperClass=\"dna-wrapper\"\r\n                      />\r\n                    </div>\r\n                  }>\r\n                <Slider arr={cast} />\r\n            </Suspense>\r\n        </div>\r\n        }\r\n    </>\r\n  )\r\n}"],"names":["CastCard","props","useState","cast","setCast","Slider","React","useEffect","fetch","type","id","then","res","json","data","i","entr","alt","name","tag","character","src","profile_path","length","catch","err","window","open","className","Suspense","fallback","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","arr"],"sourceRoot":""}